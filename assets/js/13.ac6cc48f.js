(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{509:function(t,v,_){"use strict";_.r(v);var s=_(6),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("一些关于Http&Https的问题")]),t._v(" "),_("h2",{attrs:{id:"http-和-https-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https-的区别"}},[t._v("#")]),t._v(" http 和 https 的区别")]),t._v(" "),_("p",[t._v("http就是一个简单的请求-响应传输协议，由于数据都是明文传输，所以很容易被抓包导致信息泄露，有一定的安全风险，而Https则是具有安全性的SSL加密的传输协议。两者的连接方式和使用使用的端口也不一样，http用的是80端口，https的是443。https协议是由SSL+HTTP协议构建的可以进行加密传输、身份认证的网络协议，使用时需要到CA付费申请证书。")]),t._v(" "),_("blockquote",[_("p",[t._v("CA: 证书颁发机构。")])]),t._v(" "),_("h2",{attrs:{id:"https的优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https的优缺点"}},[t._v("#")]),t._v(" https的优缺点")]),t._v(" "),_("p",[t._v("优点：")]),t._v(" "),_("ul",[_("li",[t._v("更加安全")]),t._v(" "),_("li",[t._v("通过https协议去认证用户和服务器，保证数据发送时的准确")]),t._v(" "),_("li",[t._v("增加中间人攻击的成本，https时现行最安全的方案，但不是绝对安全")]),t._v(" "),_("li",[t._v("SEO排名更高。搜索引擎会对HTTPS的站点进行扶持\n缺点：")]),t._v(" "),_("li",[t._v("页面展现耗时。由于使用SSL的缘故，连接时的时间要长")]),t._v(" "),_("li",[t._v("成本增加。SSL证书要花钱")]),t._v(" "),_("li",[t._v("效率不如http。")])]),t._v(" "),_("h2",{attrs:{id:"https是怎么加密的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https是怎么加密的"}},[t._v("#")]),t._v(" https是怎么加密的？")]),t._v(" "),_("p",[t._v("加密方式有")]),t._v(" "),_("ul",[_("li",[t._v("对称加密： 通过密钥进行发送方加密、接收方解密的形式")]),t._v(" "),_("li",[t._v("非对称加密： 有公钥和私钥、如client发送消息给server，client用server的公钥加密、server用自己的私钥进行解密。")])]),t._v(" "),_("h2",{attrs:{id:"http请求过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http请求过程"}},[t._v("#")]),t._v(" http请求过程")]),t._v(" "),_("ol",[_("li",[t._v("对www.abc.com这个网址进行DNS域名解析，通过对浏览器缓存、系统缓存再到去查询本地服务器、根域名服务器、顶级服务器查找它对应的IP地址，得到它的IP地址。")]),t._v(" "),_("li",[t._v("根据IP地址就可以找到对应的服务器，然后发起TCP的三次握手")]),t._v(" "),_("li",[t._v("建立TCP连接后发起HTTP请求")]),t._v(" "),_("li",[t._v("服务器详情HTTP请求，浏览器就可以得到需要的HTML代码")]),t._v(" "),_("li",[t._v("浏览器解析html代码，并请求html代码中用到的资源（js、css、图片等）")]),t._v(" "),_("li",[t._v("浏览器呈现页面")]),t._v(" "),_("li",[t._v("服务器关闭TCP链接")])]),t._v(" "),_("h2",{attrs:{id:"关于三次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于三次握手"}},[t._v("#")]),t._v(" 关于三次握手")]),t._v(" "),_("ol",[_("li",[t._v("客户端首先发送一个链接试探")]),t._v(" "),_("li",[t._v("服务端监听到链接请求后，同意建立连接，向客户端发送确认 （https时会返回公钥）")]),t._v(" "),_("li",[t._v("客户端收到确认后再次发送确认，同时携带要发送的数据 （https发送加密后的密钥）")])]),t._v(" "),_("h2",{attrs:{id:"关于四次挥手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于四次挥手"}},[t._v("#")]),t._v(" 关于四次挥手")]),t._v(" "),_("ol",[_("li",[t._v("客户端发出关闭报文，转变为half-close(半关闭)状态，此状态下不能再次发送数据")]),t._v(" "),_("li",[t._v("服务端接收后向客户端确认，并变成close-wait（等待关闭）状态")]),t._v(" "),_("li",[t._v("客户端收到确认后，变成fin-wait-2（等待2）状态，等待服务器发出最后的数据")]),t._v(" "),_("li",[t._v("服务端向客户端发出数据，服务器编程last-ack（最后确认）状态，等待客户端确认")]),t._v(" "),_("li",[t._v("客户端收到组或数据，发出确认，进入time-wait状态")]),t._v(" "),_("li",[t._v("服务端收到确认，进入close状态。")])]),t._v(" "),_("h2",{attrs:{id:"http的请求方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http的请求方式"}},[t._v("#")]),t._v(" http的请求方式")]),t._v(" "),_("ol",[_("li",[t._v("GET: 获取数据（查）")]),t._v(" "),_("li",[t._v("POST：提交数据（增）")]),t._v(" "),_("li",[t._v("PUT：向服务端发送数据，取代指定内容（改）")]),t._v(" "),_("li",[t._v("DELETE：删除指定资源（删）")])]),t._v(" "),_("h2",{attrs:{id:"常用的请求状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用的请求状态码"}},[t._v("#")]),t._v(" 常用的请求状态码")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("状态码")]),t._v(" "),_("th",[t._v("内容")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("200")]),t._v(" "),_("td",[t._v("请求成功")])]),t._v(" "),_("tr",[_("td",[t._v("300")]),t._v(" "),_("td",[t._v("表示重定向的状态码")])]),t._v(" "),_("tr",[_("td",[t._v("302")]),t._v(" "),_("td",[t._v("请求资源被暂时移动到了某URL上")])]),t._v(" "),_("tr",[_("td",[t._v("400")]),t._v(" "),_("td",[t._v("代表客户端错误")])]),t._v(" "),_("tr",[_("td",[t._v("401")]),t._v(" "),_("td",[t._v("需要用户认证、用户账号未登录、未认证")])]),t._v(" "),_("tr",[_("td",[t._v("403")]),t._v(" "),_("td",[t._v("服务器拒绝执行")])]),t._v(" "),_("tr",[_("td",[t._v("404")]),t._v(" "),_("td",[t._v("资源未找到")])]),t._v(" "),_("tr",[_("td",[t._v("405")]),t._v(" "),_("td",[t._v("请求方法不能用于请求资源、跨域")])]),t._v(" "),_("tr",[_("td",[t._v("500")]),t._v(" "),_("td",[t._v("服务端错误")])]),t._v(" "),_("tr",[_("td",[t._v("501")]),t._v(" "),_("td",[t._v("请求方法不被服务器支持")])]),t._v(" "),_("tr",[_("td",[t._v("502")]),t._v(" "),_("td",[t._v("网关超时")])])])]),t._v(" "),_("h2",{attrs:{id:"http缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" http缓存")]),t._v(" "),_("ol",[_("li",[t._v("缓存方式\n"),_("ul",[_("li",[t._v("浏览器缓存")]),t._v(" "),_("li",[t._v("代理缓存")]),t._v(" "),_("li",[t._v("网关缓存")]),t._v(" "),_("li",[t._v("CDN缓存")]),t._v(" "),_("li",[t._v("反向代理缓存")])])]),t._v(" "),_("li",[t._v("http缓存策略")])]),t._v(" "),_("ul",[_("li",[t._v("强制缓存")])]),t._v(" "),_("blockquote",[_("p",[t._v("强制缓存就是文件直接从缓存中获取，不需要发送请求\n强制缓存通过 expires 和 cache-control 两种响应头实现")])]),t._v(" "),_("ul",[_("li",[t._v("协商缓存")])]),t._v(" "),_("blockquote",[_("p",[t._v("协商缓存意思是文件被缓存了，读取时还要和服务器协商\n协商缓存通过 last-modified 和 etag 两种响应头实现。如有缓存有效，返回 304")])]),t._v(" "),_("h2",{attrs:{id:"cdn"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cdn"}},[t._v("#")]),t._v(" CDN")]),t._v(" "),_("p",[t._v("基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。")]),t._v(" "),_("p",[t._v("其目的是使用户可就近取得所需内容，解决Internet网络拥挤的状况，提高用户访问网站的响应速度")])])}),[],!1,null,null,null);v.default=a.exports}}]);